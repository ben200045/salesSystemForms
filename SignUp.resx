<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4B9lc5cwxWMmEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZFjzq9+
        9X/nunAbD9HttgAAAABJRU5ErkJggg==
</value>
  </data>
</root>